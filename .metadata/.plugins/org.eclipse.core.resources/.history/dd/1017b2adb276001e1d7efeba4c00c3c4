package project;

import java.util.List;
import java.util.Objects;
import java.util.Scanner;

import project.exception.DbException;
import project.service.ProjectService;

public class Main {
	private Scanner scanner = new Scanner(System.in);
	private ProjectService projectService = new ProjectService();
	//@formatter:off
			private List<String> operations = List.of(
					"1) Create and populate all tables"
					);
			
			
			//@formatter:on

	public static void main(String[] args) {
		new Main().displaymenu();
	}

	private void displaymenu() {
		boolean done = false;
		
		while(!done) {
			int operation = getOperation();
			try {
			switch (operation){
				case -1:
					done = exitMenu();
					break;
					
				case 1:
					createTables();
					break;
				default:
					System.out.println("\n" + operation + " is not valid. Try again.");
			}
			}catch(Exception e) {
				System.out.println("\nError:" + e.toString() + " Try again.");
			}
		}
	
	}
	
	private void createTables() {
		projectService.createAndPopulateTables();
		System.out.println("\nTables created and populated");
		
	}

	private boolean exitMenu() {
		System.out.println("\nExiting the menu.");
		return true;
		
	}

	private int getOperation() {
		printOperations();
		Integer op = getIntInput("Enter an operation number (press Enter to quit)");
		return Objects.isNull(op) ? -1 : op;
	}

	private void printOperations() {
		System.out.println();
		System.out.println("Here is what you can do: ");
		
		operations.forEach(op -> System.out.println(op));
	}
	private Integer getIntInput(String prompt) {
		String input = getStringInput(prompt);
		if (Objects.isNull(input)) {
			return null;
		}
		else {
			try {
				return Integer.parseInt(input);
			} catch (NumberFormatException e) {
				throw new DbException(input + " is not a valid number");
			}
		}
	}
	
	private Double getDoubleInput(String prompt) {
		String input = getStringInput(prompt);
		if (Objects.isNull(input)) {
			return null;
		}
		else {
			try {
				return Double.parseDouble(input);
			} catch (NumberFormatException e) {
				throw new DbException(input + " is not a valid number");
			}
		}
	}

	private String getStringInput(String prompt) {
		System.out.println(prompt + ": ");
		String line = scanner.nextLine();
		return line.isBlank()? null : line.trim();
	}

}
